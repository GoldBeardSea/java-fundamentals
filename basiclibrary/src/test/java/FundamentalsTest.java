/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import org.junit.Test;

import java.util.ArrayList;
import java.util.List;

import static org.junit.Assert.*;

public class FundamentalsTest {
    @Test
    public void testSomeLibraryMethod() {
        Fundamentals classUnderTest = new Fundamentals();
        assertTrue("someLibraryMethod should return 'true'", classUnderTest.someLibraryMethod());
    }

    @Test
    public void testRoll_basic() {
        int num = 16;
        int expected = num;
        int[] actual = Fundamentals.roll(num);
        assertEquals(expected, actual.length);
    }

    @Test
    public void testContainsDuplicates_containsDupes() {
        int[] array = {1, 2, 3, 3, 5, 8};
        boolean expected = true;
        boolean actual = Fundamentals.containsDuplicates(array);
        assertEquals(expected, actual);
    }

    @Test
    public void testContainsDuplicates_notDupes() {
        int[] array = {1, 2, 4, 3, 5, 8};
        boolean actual = Fundamentals.containsDuplicates(array);
        assertEquals(false, actual);
    }

    @Test
    public void testAveragesOfArray_basic() {
        int[] array = {2, 4, 6, 8, 10, 12};
        int expected = 7;
        int actual = Fundamentals.averageArray(array);
        assertEquals(expected, actual);
    }

    @Test
    public void testAveragesOfArray_negatives() {
        int[] array = {-10, -10, -10, 0, 0, 0};
        int expected = -5;
        int actual = Fundamentals.averageArray(array);
        assertEquals(expected, actual);
    }

    @Test
    public void testAverageOfArrays_basic() {
        int[][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {1, 48, 12, 22, 55, 4, 5}
        };
        int expected = 3;
        int actual = Fundamentals.averageOfArrays(weeklyMonthTemperatures);
        assertEquals(expected, actual);
    }

    @Test
    public void testAverageOfArrays_goofed() {
        int[][] weeklyMonthTemperatures = {
                {1, 2, 1000, 45, 1},
                {2, 5, 1, 1, 1, -1, -1},
                {55, 54, 60, 53, 59, 57, 61},
                {1, 48, 12, 22, 55, 4, 5}
        };
        int expected = 1;
        int actual = Fundamentals.averageOfArrays(weeklyMonthTemperatures);
        assertEquals(expected, actual);
    }

    @Test
    public void testAnalyzeWeather_testStandard() {
        int[][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };

        String expected = "High: 72\nLow: 51\nNever saw temperature: 63\nNever saw temperature: 67\nNever saw temperature: 68\nNever saw temperature: 69\n";
        String actual = Fundamentals.analyzeWeather(weeklyMonthTemperatures);
        assertEquals(expected, actual);
    }

    @Test
    public void testTally_Scrub() {
        List<String> votes = new ArrayList<>();
        votes.add("Shrub");
        votes.add("Shrub");
        votes.add("Shrub");
        votes.add("Shrub");
        votes.add("Bub");
        votes.add("Slub");
        votes.add("Chub");
        String actual = Fundamentals.tally(votes);
        String expected = "Shrub received the most votes!";
        assertEquals(expected, actual);
    }

    @Test
    public void testTally_Bub() {
        List<String> votes = new ArrayList<>();
        votes.add("Shrub");
        votes.add("Shrub");
        votes.add("Bub");
        votes.add("Bub");
        votes.add("Bub");
        votes.add("Slub");
        votes.add("Chub");
        String actual = Fundamentals.tally(votes);
        String expected = "Bub received the most votes!";
        assertEquals(expected, actual);
    }

    @Test
    public void testLinter_gates() {
        String filePath = "//Users/ttb/codefellows/401/java-fundamentals/gates.js";
        Fundamentals.linterJS(filePath);
    }

    @Test
    public void testLinter_gatesLow() {
        String filePath = "//Users/ttb/codefellows/401/java-fundamentals/gatesLow.js";
        Fundamentals.linterJS(filePath);
    }

    @Test
    public void testLinter_gatesNoError() {
        String filePath = "//Users/ttb/codefellows/401/java-fundamentals/gatesNoError.js";
        Fundamentals.linterJS(filePath);
    }

    @Test
    public void testLinter_gatesOneError() {
        String filePath = "//Users/ttb/codefellows/401/java-fundamentals/gatesOneError.js";
        Fundamentals.linterJS(filePath);
    }

    @Test
    public void testLinter_gatesMedium() {
        String filePath = "//Users/ttb/codefellows/401/java-fundamentals/gatesOneError.js";
        Fundamentals.linterJS(filePath);
    }

    @Test
    public void testLinter_gatesEmpty() {
        String filePath = "//Users/ttb/codefellows/401/java-fundamentals/gatesEmpty.js";
        Fundamentals.linterJS(filePath);
    }
}